>a package is a collection of classes,interfaces,abstract class,mehods,variables.
>package are of 2types i)user defined,2) pre-defined
>Any package which is part of your jdk is called as pre-defined package
>any no of objects can object 

System.out.println();
     :  :
class  static

syntax:
<classmate> reference=new<classname>{};
stat ref=new stat();
ref.display();



program:
package com.infinite.core;

 

class Stat {

 

	int a;
	String name1;

 

	Stat() {//empty cconstructor
		a = 90;

		return;

 

	}
	Stat(String name) {//empty cconstructor
		this.name1=name;
	}
	Stat(String uname,int q) {//empty cconstructor

	}

 

	// named blocks
	public void display() {
		System.out.println(name1);
	}







task1:
create a java program  which class varaiable as int array and display the values in that array using display method.

note
>>From JVM prospective ,every java program is a thread



over laoding,over riding:
>>>>>>>>>>>>>




Rules for Method Overloading:
==============================
The overloaded method must change the argument list (number of parameters, data type, or sequence of parameters).
The overloaded method can change the return type.
The overloaded method can change the access modifier (the signature of the function should be different).



Rules for Method Overiding:

===========================

>he argument list should be exactly the same as that of the overridden method.

The return type should be the same or a subtype of the return type declared in the original overridden method in the superclass.

The access level cannot be more restrictive than the overridden method's access level. For example: If the superclass method is declared public then the overriding method in the subclass cannot be either private or protected.

Instance methods can be overridden only if they are inherited by the subclass.

A method declared final cannot be overridden.

A method declared static cannot be overridden but can be re-declared.

If a method cannot be inherited, then it cannot be overridden.

A subclass within the same package as the instance's superclass can override any superclass method that is not declared private or final.

A subclass in a different package can only override the non-final methods declared public or protected.

An overriding method can throw any uncheck exceptions, regardless of whether the overridden method throws exceptions or not. However, the overriding method should not throw checked exceptions that are new or broader than the ones declared by the overridden method. The overriding method can throw narrower or fewer exceptions than the overridden method.

Constructors cannot be overridden.



***

can we override static variables?

can we overload non static variable?
***



